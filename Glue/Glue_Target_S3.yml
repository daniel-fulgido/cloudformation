AWSTemplateFormatVersion: 2010-09-09

Description: This CloudFormation template will create the Glue.

# The Metadata field serves to make the parameters user-friendly.

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: "Glue - Network Configuration"
        Parameters:
          - VpcID
          - SubnetId
      -
        Label:
          default: "Glue - Database Inbound Connection"
        Parameters:
          - GlueRDS
          - JDBCString
          - JDBCUser
          - JDBCPassword
          - Schema
      -
        Label:
          default: "S3 - VPC Endpoint"
        Parameters: 
          - CreationVCPEndpoint
          - RouteTable
      -
        Label:
          default: "S3 - Outbound connection"
        Parameters:
          - GlueS3
          - BucketS3
          - NameBucketS3
          - ExistNameBucketS3
        
    ParameterLabels:
      GlueRDS:
        default: "Choose a name for the Database and Crawler that will be part of Database"
      GlueS3:
        default: "Choose a name for the Database and Crawler that will be part of S3"
      VpcID:
        default: "VPC"
      SubnetId:
        default: "Subnet"
      JDBCString:
        default: "Database connection string"
      JDBCUser:
        default: "Database User"
      JDBCPassword:
        default: "Database Password" 
      BucketS3:
        default: "Do you want to create an S3 bucket?"
      NameBucketS3:
        default: "If yes, create a unique name for Bucket S3"
      ExistNameBucketS3:
        default: "If not, enter your S3 bucket name"
      CreationVCPEndpoint:
        default: "Do you want to create a VPC Endpoint to connect S3 to Glue?"
      RouteTable:
        default: "Route Table"
      Schema:
        default: "Path"

# The Parameters block is the sector where the user places the variables.

Parameters:
  GlueRDS:
    Type: String
    Description: "Input the name that will be on the Database and Crawler for RDS"

  GlueS3:
    Type: String
    Description: "Input the name that will be on the Database and Crawler for S3"

  VpcID:
    Description: "Choose the VPC"
    Type: AWS::EC2::VPC::Id
  
  SubnetId:
    Description: 'Choose the Subnet ID'
    Type: String
  
  JDBCString:  
    Description: 'Enter the JDBC String'
    Type: String
    Default: 'jdbc:protocol://host:port/databasename'
  
  JDBCUser:  
    Description: 'Enter the Database user'
    Type: String
  
  JDBCPassword:  
    Description: 'Enter the Database Password'
    Type: String

  NameBucketS3:
    Type: String
    Description: 'Create a unique name.'

  BucketS3:
    Type: String
    AllowedValues: [true, false]
    Description: 'If you want to create an S3 bucket choose true, if not choose false.'

  ExistNameBucketS3:
    Type: String
    Description: 'Input the name of the existing bucket.'

  CreationVCPEndpoint:
    Type: String
    AllowedValues: [true, false]
    Description: 'If you want to create a VPC Endpoint choose true, if not choose false.'

  RouteTable:
    Type: String
    Description: 'Only write the Route Table if the option above is yes.'

  Schema:
    Type: String
    Description: 'Input name path of your DBMS'

# Conditions are the decision parameters of the template.

Conditions:
  CreationVCPEndpointSelected: !Equals [!Ref CreationVCPEndpoint, true]
  CreationS3Bucket: !Equals [!Ref BucketS3, true]

Resources:

# Creation of permission role for services.

  IAM:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "glue.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      Policies:
        -
          PolicyName: !Ref GlueRDS
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action: "*"
                Resource: "*"

# Security Group of Glue

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group for Glue
      VpcId: !Ref VpcID
  
  InboundRule:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: -1
      FromPort: -1
      ToPort: -1
      SourceSecurityGroupId: !GetAtt SecurityGroup.GroupId
      GroupId: !GetAtt SecurityGroup.GroupId
      
  OutboundRule:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:    
      IpProtocol: -1
      FromPort: -1
      ToPort: -1
      CidrIp: 0.0.0.0/0
      GroupId: !GetAtt SecurityGroup.GroupId

# For Glue to connect to S3 it is necessary to have a VPC Endpoint.

  VPCEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Condition: CreationVCPEndpointSelected
    Properties:
      ServiceName: !Join
        - ''
        - - com.amazonaws.
          - !Ref 'AWS::Region'
          - .s3
      VpcEndpointType: Gateway
      VpcId: 
        Ref: VpcID
      RouteTableIds:
        - !Ref RouteTable

# Database, Connections and Crawler are the components for creating Glue.

  DatabaseRDS:
    Type: AWS::Glue::Database
    Properties:
      DatabaseInput:
        Name: !Ref GlueRDS
      CatalogId: !Ref AWS::AccountId

  DatabaseS3:
    Type: AWS::Glue::Database
    Properties:
      DatabaseInput:
        Name: !Ref GlueS3
      CatalogId: !Ref AWS::AccountId

  Connections:
    Type: AWS::Glue::Connection
    Properties:
      CatalogId: !Ref AWS::AccountId 
      ConnectionInput: 
        ConnectionType: 'JDBC'
        PhysicalConnectionRequirements:
          SecurityGroupIdList: 
            - !GetAtt SecurityGroup.GroupId
          SubnetId: !Ref SubnetId 
        ConnectionProperties: {
          'JDBC_CONNECTION_URL': !Ref JDBCString,
          'USERNAME': !Ref JDBCUser,
          'PASSWORD': !Ref JDBCPassword,
          'JDBC_ENFORCE_SSL': false
        }
        Name: !Ref GlueRDS
 
  CrawlerRDS:
    Type: AWS::Glue::Crawler
    Properties:
      Name: !Ref GlueRDS
      Role: !GetAtt IAM.Arn
      DatabaseName: !Ref DatabaseRDS
      Targets:
        JdbcTargets:
          - ConnectionName: !Ref GlueRDS
            Path: !Ref Schema

  CrawlerS3:
    Type: AWS::Glue::Crawler
    Properties:
      Name: !Ref GlueS3
      Role: !GetAtt IAM.Arn
      DatabaseName: !Ref DatabaseS3
      Targets:
        S3Targets:
          - ConnectionName: !Ref GlueS3
            Path: !If [CreationS3Bucket, !Ref NameBucketS3, !Ref ExistNameBucketS3] 

# Creation or not of bucket S3.

  S3:
    Type: AWS::S3::Bucket
    Condition: CreationS3Bucket
    Properties:
      BucketName: !If [CreationS3Bucket, !Ref NameBucketS3, !Ref ExistNameBucketS3] 