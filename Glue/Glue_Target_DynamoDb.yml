AWSTemplateFormatVersion: 2010-09-09

Description: This CloudFormation template will create the Glue.

# The Metadata field serves to make the parameters user-friendly.

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: "Glue - Network Configuration"
        Parameters:
          - VpcID
          - SubnetId
      -
        Label:
          default: "Glue - Database Inbound Connection"
        Parameters:
          - GlueService
          - JDBCString
          - JDBCUser
          - JDBCPassword
          - Schema
      -  
        Label:
          default: "DynamoDB - Outbound connection"
        Parameters:
          - DynamoDB
          - VPCEDynamoDB
          - VPCES3
          - RouteTable
          - NameGlueDynamoDB
          - NewDynamoDB
          - ExistDynamoDB
        
    ParameterLabels:
      GlueService:
        default: "Choose a name for the Database and Crawler that will be part of Database"
      VpcID:
        default: "VPC"
      SubnetId:
        default: "Subnet"
      JDBCString:
        default: "Database connection string"
      JDBCUser:
        default: "Database User"
      JDBCPassword:
        default: "Database Password" 
      DynamoDB:
        default: "Do you want to create a DynamoDB table?" 
      VPCEDynamoDB:
        default: "Do you want to create a VPC Endpoint of DynamoDb type Gateway"
      VPCES3:
        default: "Do you want to create a VPC Endpoint of S3 type Gateway"
      Schema:
        default: "Path"
      NewDynamoDB:
        default: "What is the name of the new DynamoDb table that will be created?"
      ExistDynamoDB:
        default: "What is the name of the existing DynamoDb table?"  
      NameGlueDynamoDB:
        default: "Choose a name for the Database and Crawler that will be part of DynamoDb"
      RouteTable:
        default: "Route Table"

# The Parameters block is the sector where the user places the variables.

Parameters:
  GlueService:
    Type: String

  VpcID:
    Description: "Choose the VPC"
    Type: AWS::EC2::VPC::Id

  SubnetId:
    Description: 'Choose the Subnet ID'
    Type: String
  
  JDBCString:  
    Description: 'Enter the JDBC String'
    Type: String
    Default: 'jdbc:protocol://host:port/databasename'
  
  JDBCUser:  
    Description: 'Enter the Database user'
    Type: String
  
  JDBCPassword:  
    Description: 'Enter the Database Password'
    Type: String

  DynamoDB:
    Type: String
    AllowedValues: [true, false]
    Description: "Select true for yes or false for no."

  VPCEDynamoDB:
    Type: String
    AllowedValues: [true, false]
    Description: "Select true for yes or false for no."

  VPCES3:
    Type: String
    AllowedValues: [true, false]
    Description: "Select true for yes or false for no."

  NameGlueDynamoDB:
    Type: String
    Description: "Input the name that will be on the Database and Crawler for DynamoDb"
  
  NewDynamoDB:
    Type: String
    Description: "If the chosen option is true, input the name of your new DynamoDb table"

  ExistDynamoDB:
    Type: String
    Description: "If the chosen option is false, input the name of the existing DynamoDb table."

  Schema:
    Type: String
    Description: 'Input name path of your DBMS'

  RouteTable:
    Type: String
    Description: 'Input the route table only if you want to create the VPC Endpoints.'

# Conditions are the decision parameters of the template.

Conditions:
  CreationDynamoDbSeletected: !Equals [!Ref DynamoDB, true]
  CreationVPCEDynamoDBSelected: !Equals [!Ref VPCEDynamoDB, true]
  CreationVPCES3Selected: !Equals [!Ref VPCES3, true]

Resources:

# Creation of permission role for services.  
  
  IAM:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "glue.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      Policies:
        -
          PolicyName: !Ref GlueService
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action: "*"
                Resource: "*"

# For Glue to connect to DynamoDb it is necessary to have two VPC Endpoint.

  VPCEndpointS3:
    Type: AWS::EC2::VPCEndpoint
    Condition: CreationVPCES3Selected
    Properties:
      ServiceName: !Join
        - ''
        - - com.amazonaws.
          - !Ref 'AWS::Region'
          - .s3
      VpcEndpointType: Gateway
      VpcId: 
        Ref: VpcID
      RouteTableIds:
        - !Ref RouteTable

  VPCEndpointDynamoDb:
    Type: AWS::EC2::VPCEndpoint
    Condition: CreationVPCEDynamoDBSelected
    Properties:
      ServiceName: !Join
        - ''
        - - com.amazonaws.
          - !Ref 'AWS::Region'
          - .dynamodb
      VpcEndpointType: Gateway
      VpcId: 
        Ref: VpcID
      RouteTableIds:
        - !Ref RouteTable

# Security Group of Glue

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group for Glue
      VpcId: !Ref VpcID
  
  InboundRule:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: -1
      FromPort: -1
      ToPort: -1
      SourceSecurityGroupId: !GetAtt SecurityGroup.GroupId
      GroupId: !GetAtt SecurityGroup.GroupId
      
  OutboundRule:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:    
      IpProtocol: -1
      FromPort: -1
      ToPort: -1
      CidrIp: 0.0.0.0/0
      GroupId: !GetAtt SecurityGroup.GroupId

# Database, Connections and Crawler are the components for creating Glue.

  DatabaseRDS:
    Type: AWS::Glue::Database
    Properties:
      DatabaseInput:
        Name: !Ref GlueService
      CatalogId: !Ref AWS::AccountId

  DatabaseDynamoDb:
    Type: AWS::Glue::Database
    Properties:
      DatabaseInput:
        Name: !Ref NameGlueDynamoDB
      CatalogId: !Ref AWS::AccountId

  Connections:
    Type: AWS::Glue::Connection
    Properties:
      CatalogId: !Ref AWS::AccountId 
      ConnectionInput: 
        ConnectionType: 'JDBC'
        PhysicalConnectionRequirements:
          SecurityGroupIdList: 
            - !GetAtt SecurityGroup.GroupId
          SubnetId: !Ref SubnetId 
        ConnectionProperties: {
          'JDBC_CONNECTION_URL': !Ref JDBCString,
          'USERNAME': !Ref JDBCUser,
          'PASSWORD': !Ref JDBCPassword,
          'JDBC_ENFORCE_SSL': false
        }
        Name: !Ref GlueService
 
  CrawlerRDS:
    Type: AWS::Glue::Crawler
    Properties:
      Name: !Ref GlueService
      Role: !GetAtt IAM.Arn
      DatabaseName: !Ref DatabaseRDS
      Targets:
        JdbcTargets:
          - ConnectionName: !Ref GlueService
            Path: !Ref Schema

  CrawlerDynamoDb:
    Type: AWS::Glue::Crawler
    Properties:
      Name: !Ref NameGlueDynamoDB
      Role: !GetAtt IAM.Arn
      DatabaseName: !Ref DatabaseDynamoDb
      Targets:
        DynamoDBTargets:
          - Path: !If [CreationDynamoDbSeletected, !Ref NewDynamoDB, !Ref ExistDynamoDB]

# Creation or not DynamoDB Table.

  DynamoDBTable:
    Type: 'AWS::DynamoDB::Table'
    Condition: CreationDynamoDbSeletected
    Properties:
      TableName: !Ref NewDynamoDB
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 100
        WriteCapacityUnits: 100