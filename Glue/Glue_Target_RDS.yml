AWSTemplateFormatVersion: 2010-09-09

Description: This CloudFormation template will create the Glue.

# The Metadata field serves to make the parameters user-friendly.

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: "Glue - Network Configuration"
        Parameters:
          - VpcID
          - SubnetId
      -
        Label:
          default: "Glue - Database Inbound Connection"
        Parameters:
          - GlueService1
          - JDBCString1
          - JDBCUser1
          - JDBCPassword1
          - Schema1
      -
        Label:
          default: "Glue - Database Outbound Connection"
        Parameters:
          - GlueService2
          - JDBCString2
          - JDBCUser2
          - JDBCPassword2
          - Schema2
        
    ParameterLabels:
      VpcID:
        default: "VPC"
      SubnetId:
        default: "Subnet"
      GlueService1:
        default: "Enter your Database's name"
      GlueService2:
        default: "Enter your Database's name"        
      JDBCString1:
        default: "Database connection string"
      JDBCUser1:
        default: "Database User"
      JDBCPassword1:
        default: "Database Password"
      Schema1:
        default: "Path"
      JDBCString2:
        default: "Database connection string"
      JDBCUser2:
        default: "Database User"
      JDBCPassword2:
        default: "Database Password"
      Schema2:
        default: "Path"

Parameters:

  VpcID:
    Description: "Choose the VPC"
    Type: AWS::EC2::VPC::Id

  SubnetId:
    Description: 'Choose the Subnet ID'
    Type: String

  GlueService1:
    Type: String

  GlueService2:
    Type: String

  JDBCString1:  
    Description: 'Input the JDBC String'
    Type: String
    Default: 'jdbc:protocol://host:port/databasename'
  
  JDBCUser1:  
    Description: 'Enter the Database user'
    Type: String
  
  JDBCPassword1:  
    Description: 'Enter the Database Password'
    Type: String

  Schema1:
    Description: 'Input name path of your DBMS'
    Type: String

  JDBCString2:  
    Description: 'Input the JDBC String'
    Type: String
    Default: 'jdbc:protocol://host:port/databasename'
  
  JDBCUser2:  
    Description: 'Enter the Database user'
    Type: String
  
  JDBCPassword2:  
    Description: 'Enter the Database Password'
    Type: String

  Schema2:
    Description: 'Input name path of your DBMS'
    Type: String

Resources:

# Creation of permission role for services.  
  
  IAM:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "glue.amazonaws.com"
                - "rds.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      Policies:
        -
          PolicyName: !Ref GlueService1
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action: "*"
                Resource: "*"

# Security Group of Glue

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group for Glue
      VpcId: !Ref VpcID
  
  InboundRule:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: -1
      FromPort: -1
      ToPort: -1
      SourceSecurityGroupId: !GetAtt SecurityGroup.GroupId
      GroupId: !GetAtt SecurityGroup.GroupId
      
  OutboundRule:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:    
      IpProtocol: -1
      FromPort: -1
      ToPort: -1
      CidrIp: 0.0.0.0/0
      GroupId: !GetAtt SecurityGroup.GroupId

# Database, Connections and Crawler are the components for creating Glue.

  Database1:
    Type: AWS::Glue::Database
    Properties:
      DatabaseInput:
        Name: !Ref GlueService1
      CatalogId: !Ref AWS::AccountId

  Database2:
    Type: AWS::Glue::Database
    Properties:
      DatabaseInput:
        Name: !Ref GlueService2
      CatalogId: !Ref AWS::AccountId

  Connections1:
    Type: AWS::Glue::Connection
    Properties:
      CatalogId: !Ref AWS::AccountId 
      ConnectionInput: 
        ConnectionType: 'JDBC'
        PhysicalConnectionRequirements:
          SecurityGroupIdList: 
            - !GetAtt SecurityGroup.GroupId
          SubnetId: !Ref SubnetId 
        ConnectionProperties: {
          'JDBC_CONNECTION_URL': !Ref JDBCString1,
          'USERNAME': !Ref JDBCUser1,
          'PASSWORD': !Ref JDBCPassword1,
          'JDBC_ENFORCE_SSL': false
        }
        Name: !Ref GlueService1

  Connections2:
    Type: AWS::Glue::Connection
    Properties:
      CatalogId: !Ref AWS::AccountId 
      ConnectionInput: 
        ConnectionType: 'JDBC'
        PhysicalConnectionRequirements:
          SecurityGroupIdList: 
            - !GetAtt SecurityGroup.GroupId
          SubnetId: !Ref SubnetId 
        ConnectionProperties: {
          'JDBC_CONNECTION_URL': !Ref JDBCString2,
          'USERNAME': !Ref JDBCUser2,
          'PASSWORD': !Ref JDBCPassword2,
          'JDBC_ENFORCE_SSL': false
        }
        Name: !Ref GlueService2
 
  Crawler1:
    Type: AWS::Glue::Crawler
    Properties:
      Name: !Ref GlueService1
      Role: !GetAtt IAM.Arn
      DatabaseName: !Ref GlueService1
      Targets:
        JdbcTargets:
          - ConnectionName: !Ref GlueService1
            Path: !Ref Schema1

  Crawler2:
    Type: AWS::Glue::Crawler
    Properties:
      Name: !Ref GlueService2
      Role: !GetAtt IAM.Arn
      DatabaseName: !Ref GlueService2
      Targets:
        JdbcTargets:
          - ConnectionName: !Ref GlueService2
            Path: !Ref Schema2